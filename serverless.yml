service: serverless-obfuscator
app: obfuscator
tenant: albertnis

plugins:
  - serverless-domain-manager
  - serverless-s3-sync

provider:
  name: aws
  runtime: nodejs8.10
  region: us-west-2

functions:
  server:
    handler: src/functions/server/dist/server.server
    events:
      - http:
          path: /
          method: get
          cors: true
      - http:
          path: /{proxy+}
          method: get
          cors: true
  translate:
    handler: src/functions/translate/translate.translate
    events:
      - http:
          path: translate
          method: get
          cors: true

custom:
  customDomain:
    domainName: obfuscator.albertnis.com
    certificateArn: arn:aws:acm:us-east-1:183333128222:certificate/70c013b9-a830-42c6-bea7-36317132aac1
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
  s3Sync:
    - bucketName: ${self:service}
      bucketPrefix: static/
      localDir: static
      acl: public-read

resources:
  Resources:
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:service}

# StaticSiteS3BucketPolicy:
#       Type: AWS::S3::BucketPolicy
#       Properties:
#         Bucket:
#           Ref: StaticSite
#         PolicyDocument:
#           Statement:
#             - Sid: PublicReadGetObject
#               Effect: Allow
#               Principal: "*"
#               Action:
#               - s3:GetObject
#               Resource:
#                 Fn::Join: [
#                   "", [
#                     "arn:aws:s3:::",
#                     {
#                       "Ref": "StaticSite"
#                     },
#                     "/*"
#                   ]
#                 ]
